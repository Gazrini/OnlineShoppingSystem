CREATE Procedure spChangePassword
@GUID uniqueidentifier,
@password nvarchar(100)
as
Begin
 Declare @customerid int
 
 Select @customerid = CustomerId 
 from ResetPasswordRequests
 where Id= @GUID
 
 if(@customerid is null)
 Begin
  -- If UserId does not exist
  Select 0 as IsPasswordChanged
 End
 Else
 Begin
  -- If UserId exists, Update with new password
  Update Customers set
  [Password] = @password
  where CustomerId = @customerid
  
  -- Delete the password reset request row 
  Delete from ResetPasswordRequests
  where Id = @GUID
  
  Select 1 as IsPasswordChanged
 End
End





Create Procedure spIsPasswordResetLinkValid 
@GUID uniqueidentifier
as
Begin
 Declare @customerid int
 If(Exists(Select CustomerId from ResetPasswordRequests where Id = @GUID))
 Begin
  Select 1 as IsValidPasswordResetLink
 End
 Else
 Begin
  Select 0 as IsValidPasswordResetLink
 End
End








CREATE PROCEDURE spResetPassword
	@email varchar (100)
AS

Begin
		Declare @customerid int
		Declare @username nvarchar(100)

		select @customerid = CustomerId, @username = Username from Customers where Email = @email

		if (@customerid IS NOT NULL)
		Begin

		--If Email exist
		Declare @GUID UniqueIdentifier
		Set @GUID = NEWID()

		insert into  ResetPasswordRequests (Id, CustomerId, ResetRequestDateTime) Values (@GUID, @customerid, GETDATE())

		Select 1 as ReturnCode, @GUID as UniqueId, @email as Email

		End
		Else
		Begin

		--if Email does not exist
		Select 0 as ReturnCode, NULL as UniqueId, NULL as Email

		End
End